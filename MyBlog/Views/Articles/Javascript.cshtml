
@{
    ViewData["Title"] = "Javascript";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container articles">

    <h1>Javascript</h1>
    <p>
        HTML, CSS ve Javascript, World Wide Web'in temel teknolojileridir. Peki bunlar arasında Javascript nedir? Ne için kullanılır?
        <br />
        Javascript, modern web'de yaygın olarak kullanılan high level language(üst düzey) bir programlama dilidir. Hem istemci tarafı hem de sunucu tarafında çalışabilir. Dinamik programlama nesne yönelimli proglamlama gibi çok sayıda özelliğe sahiptir. Şuanda hayatta olan web sitelerinin çoğu javascript kullanılarak geliştirilmiştir ve web tarayıcıları bunu yürütmek için javascript motorunu kullanır.<br /> Javascript, etkileşimli, dinamik web sayfaları oluşturmaya yardımcı olur. Olay tabanlı, işlevsel, nesne yönelimli ve prototip tabanlı programlama stillerini destekler. Javascript, DOM manipülasyonunda da büyük ölçüde bizlere yardımcı olur. Dizeler, tarihler, diziler, normal ifadeler vb. Gibi çeşitli veri türleriyle çalışmak için esnek API'lere sahiptir.<br />
        <div class="row">
            <div class="col-md-3"></div>
            <div class="col-md-6"><img class="img-fluid" src="~/images/js.png" /></div>
            <div class="col-md-3"></div>

        </div>
        <br />
        <h3>Javascript Nasıl Çalışır?</h3>
<p>JavaScript'i kullanmadan önce, nasıl çalıştığını bilmek önemlidir. İki önemli husus vardır : Web tarayıcısı nasıl çalışır ve Belge Nesne Modeli (DOM) nedir?. </p>
<div class="row">
    <div class="col-md-3"></div>
    <div class="col-md-6"><img class="img-fluid" src="~/images/how-works.png" /></div>
    <div class="col-md-3"></div>

</div>
    
    
    Web tarayıcısı bir web sayfasını yükler, HTML kodunu ayrıştırır ve içerikten DOM nesnesini oluşturur. DOM, web sayfasının görünümünü JavaScript koduna sunar.
    
    Tarayıcı daha sonra resimler ve CSS dosyaları gibi HTML'ye bağlı her şeyi alır.
    <br />
    HTML ve CSS, önce web sayfasını oluşturmak için DOM tarafından bir araya getirilir. Ardından, tarayıcının JavaScript motoru JavaScript dosyalarını ve satır içi kodu yükler, ancak kodu hemen çalıştırmaz. HTML ve CSS'nin yüklemeyi bitirmesini bekler.

    Bu yapıldıktan sonra, JavaScript kodun yazıldığı sırayla çalıştırılır. Bu, DOM'un JavaScript koduyla güncellenmesine ve tarayıcı tarafından oluşturulmasına neden olur.

    Buradaki sıra önemlidir. <br />JavaScript HTML ve CSS'nin bitmesini beklemeseydi, DOM öğelerini değiştiremezdi.
    <br />
    <h3>Örnek Kullanım</h3>
    Şimdi de örnek bir kullanımla DOM olayında nasıl kullanıldğını öğrenmiş olacağız. Mesela bir butonumuzun ve bir paragraf alanımızın  olduğunu düşünelim bu butona tıklandığı zaman paragraf alanının içeriğini "Javascript" olarak güncelleyelim. Javascript işlemlerini script tagi arasında gerçekleştireceğiz.
    <br /><br />
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col-md-6"><img class="img-fluid" src="~/images/jscode.jpg"/></div>
        <div class="col-md-3"></div>

    </div>
</div>

